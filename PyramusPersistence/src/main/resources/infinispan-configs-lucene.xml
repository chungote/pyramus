<?xml version="1.0" encoding="UTF-8"?>
<infinispan
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="urn:infinispan:config:5.1 http://www.infinispan.org/schemas/infinispan-config-5.1.xsd"
  xmlns="urn:infinispan:config:5.1">
 
 <!-- 
  <global>
    <transport clusterName="lucenePyramusCluster" />
    <globalJmxStatistics enabled="true" allowDuplicateDomains="true"/>
  </global>
 
  <global>
    <globalJmxStatistics enabled="true" allowDuplicateDomains="true"/>
    <transport clusterName="${jboss.partition.name:DefaultPartition}-HAPartition" distributedSyncTimeout="17500">
      <properties>
        <property name="stack" value="${jboss.default.jgroups.stack:tcp}" />
      </properties> 
    </transport>
    <shutdown hookBehavior="DONT_REGISTER" />
  </global>
    -->
   
  <global>
    <globalJmxStatistics enabled="true" allowDuplicateDomains="true"/>
  </global>
  <!-- *************************** -->
  <!-- Default "template" settings -->
  <!-- *************************** -->
  <default>
    <locking lockAcquisitionTimeout="20000" writeSkewCheck="false" concurrencyLevel="500" useLockStriping="false" />
    <!-- Invocation batching is required for use with the Lucene Directory -->
    <invocationBatching enabled="true" />
    <!-- 
      This element specifies that the cache is clustered. modes supported: distribution (d), replication (r) or invalidation (i). Don't use invalidation to store 
      Lucene indexes (as with Hibernate Search DirectoryProvider). Replication is recommended for best performance of Lucene indexes, but make sure you have enough memory 
      to store the index in your heap. Also distribution scales much better than replication on high number of nodes in the cluster. 
    -->
<!-- 
    <clustering mode="distribution">
      <stateTransfer timeout="20000" fetchInMemoryState="false"/>
      <sync replTimeout="20000" />
    </clustering>
-->
    <jmxStatistics enabled="true" />
    <eviction maxEntries="-1" strategy="NONE" />
    <expiration maxIdle="-1" />
  </default>

  <!-- *************************************** -->
  <!-- Cache to store Lucene's file metadata -->
  <!-- *************************************** -->

  <namedCache name="LuceneIndexesMetadata">
    <loaders passivation="false" shared="true">
      <loader class="org.infinispan.loaders.file.FileCacheStore" fetchPersistentState="true">
        <properties>
          <property name="location" value="${jboss.server.data.dir}${/}lucene" />
        </properties>
      </loader>
    </loaders>
    <!-- 
    <clustering mode="distribution">
      <stateTransfer fetchInMemoryState="false"/>
      <sync replTimeout="25000" />
    </clustering>
     -->
  </namedCache>

  <!-- **************************** -->
  <!-- Cache to store Lucene data -->
  <!-- **************************** -->

  <namedCache name="LuceneIndexesData">
    <loaders passivation="false" shared="true">
      <loader class="org.infinispan.loaders.file.FileCacheStore" fetchPersistentState="true">
        <properties>
          <property name="location" value="${jboss.server.data.dir}${/}lucene" />
        </properties>
      </loader>
    </loaders>
    
    <!-- 
    <clustering mode="distribution">
      <stateTransfer fetchInMemoryState="false"/>
      <sync replTimeout="25000" />
    </clustering>
     -->
  </namedCache>

  <!-- ***************************** -->
  <!-- Cache to store Lucene locks -->
  <!-- ***************************** -->
  
  <namedCache name="LuceneIndexesLocking">
    <loaders passivation="false" shared="true">
      <loader class="org.infinispan.loaders.file.FileCacheStore" fetchPersistentState="true">
        <properties>
          <property name="location" value="${jboss.server.data.dir}${/}lucene" />
        </properties>
      </loader>
    </loaders>
<!-- 
    <clustering mode="distribution">
      <stateTransfer fetchInMemoryState="false"/>
      <sync replTimeout="25000" />
    </clustering>
 -->
  </namedCache>

</infinispan>