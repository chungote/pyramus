#summary Quick start guide for installing Pyramus into Ubuntu Server.

==Prerequisites==

This guide assumes that you have a fresh Ubuntu Server 12.04 LTS running in your computer.  

==JBossAS 7==

We are installing Pyramus on top of JBossAS 7.1.1-final so first we need to get it running.

Install OpenJDK and unzip packages
{{{
# sudo apt-get install openjdk-7-jdk unzip
}}}

Fetch JBoss tar ball
{{{
# cd /tmp
# wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.tar.gz
}}}
Extract JBoss into /opt -folder
{{{
# sudo tar -xvf /tmp/jboss-as-7.1.1.Final.tar.gz -C /opt
}}}

Add user for jboss 
{{{
# sudo adduser jboss
}}}

Change jboss -folder to be owned by jboss -user
{{{
# sudo chown -R jboss:jboss /opt/jboss-as-7.1.1.Final/
}}}
Add new administrative user for JBoss
  * Type of user: Management user
  * Realm: ManagementRealm

{{{
# sudo -u jboss /opt/jboss-as-7.1.1.Final/bin/add-user.sh
}}}

Download MySQL driver
{{{
# cd /tmp
# wget http://pyramus.googlecode.com/files/jboss-as-mysql-module-7.1.1.zip
}}}
Extract driver into JBoss
{{{
# sudo -u jboss unzip jboss-as-mysql-module-7.1.1.zip -d /opt/jboss-as-7.1.1.Final/modules/
}}}


Edit /opt/jboss-as-7.1.1.Final/standalone/configuration/standalone.xml with your favourite text editor

{{{
# sudo -u jboss vi /opt/jboss-as-7.1.1.Final/standalone/configuration/standalone.xml 
}}}

Locate "urn:jboss:domain:datasources:1.0" -subsystem. Find drivers inside in and add mysql driver inside that. 

{{{
<driver name="mysql" module="com.mysql.jdbc">
  <driver-class>com.mysql.jdbc.Driver</driver-class>
</driver>
}}}

Add datasource for Pyramus before drivers -tag.
{{{
<datasource jta="true" jndi-name="java:/jdbc/pyramus" pool-name="jdbc/pyramus" enabled="true" use-ccm="false">
  <connection-url>jdbc:mysql://localhost:3306/pyramus</connection-url>
  <driver>mysql</driver>
  <security>
    <user-name>user</user-name>
    <password>password</password>
  </security>
  <validation>
    <validate-on-match>false</validate-on-match>
    <background-validation>false</background-validation>
  </validation>
  <statement>
    <share-prepared-statements>false</share-prepared-statements>
  </statement>
</datasource>
}}}

==Database==

Install MySQL
{{{
sudo apt-get install mysql-server
}}}
Login to MySQL as root and create new database and user for it.
{{{
# mysql -p -u root
> create database pyramus default charset utf8;  
> create user 'pyramus'@'localhost' identified by 'password';
> grant all privileges on pyramus.* to 'pyramus'@'localhost';
> flush privileges;
> exit;
}}}

TODO: Write how to install xmldb-updater

Download latest database updates from http://code.google.com/p/pyramus/downloads/ and extract them to /opt/pyramus-updates 
{{{
# cd /tmp
# wget https://pyramus.googlecode.com/files/updates-0.6.3.zip
# sudo mkdir /opt/pyramus-updates
# sudo unzip /tmp/updates-0.6.3.zip -d /opt/pyramus-updates
}}}
Run updater to create database
{{{
# sudo java -jar /opt/pyramus-updater/xmldb-updater-2.0.0.jar --databaseDriversFolder /opt/jboss-as-7.1.1.Final/modules/com/mysql/jdbc/main/ --databaseUrl jdbc:mysql://localhost:3306/pyramus --databaseUsername pyramus --databasePassword pyramus --databaseVendor MySQL --force /opt/pyramus-updates/updates/
}}}
=== Sertificate ===
Create new keystore into /opt/jboss-as-7.1.1.Final/standalone/configuration/. 
*Use your host name as CN (e.g. www.pyramus.dev)*
{{{
# sudo keytool -genkey -keysize 2048 -keyalg RSA -keystore /opt/jboss-as-7.1.1.Final/standalone/configuration/jboss.keystore -alias tomcat
}}}



  * Create new keystore into JBoss/standalone/configuration -folder
    * keytool -genkey -keysize 2048 -keyalg RSA -keystore jboss.keystore -alias tomcat
    * Use your host name as CN (e.g. www.pyramus.dev)
  * Open keystore with Portecle (http://sourceforge.net/projects/portecle/)
  * Export tomcat alias in PEM format to hard drive
  * Import exported sertificate as trusted back to keystore with name root
  * Edit JBoss/standalone/configuration/standalone.xml file
  * Locate urn:jboss:domain:web:1.1 -subsystem
  * Add redirect-port="443" attribute into http connector
  * Add https connector:
{{{
<connector name="https" protocol="HTTP/1.1" scheme="https" socket-binding="https" secure="true">
  <ssl name="ssl" key-alias="tomcat" password="password" certificate-key-file="../standalone/configuration/jboss.keystore" protocol="TLS" verify-client="false"/>
</connector>
}}}
  * Change http and https ports into 80 and 443 in socket-binding-group